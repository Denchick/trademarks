// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	models "github.com/denchick/trademarks/models"
	mock "github.com/stretchr/testify/mock"
)

// TrademarkRepository is an autogenerated mock type for the TrademarkRepository type
type TrademarkRepository struct {
	mock.Mock
}

// FindByName provides a mock function with given fields: name
func (_m *TrademarkRepository) FindByName(name string) ([]*models.DBTrademark, error) {
	ret := _m.Called(name)

	var r0 []*models.DBTrademark
	if rf, ok := ret.Get(0).(func(string) []*models.DBTrademark); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.DBTrademark)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindSimilar provides a mock function with given fields: name
func (_m *TrademarkRepository) FindSimilar(name string) ([]*models.DBTrademark, error) {
	ret := _m.Called(name)

	var r0 []*models.DBTrademark
	if rf, ok := ret.Get(0).(func(string) []*models.DBTrademark); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.DBTrademark)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
